import argparse
import logging
from pathlib import Path

import pandas as pd


logger = logging.getLogger(__name__)


def ensemble(models_dir: Path):
    df_parts = []
    for model_dir in [d for d in models_dir.iterdir() if d.is_dir()]:
        predictions_file = model_dir / 'test_predictions.csv'
        logger.info('Loading %s', predictions_file)
        df = pd.read_csv(predictions_file)
        df_parts.append(df.set_index('ID'))

    df = df_parts[0]
    for df_part in df_parts[1:]:
        df = df + df_part
    df = df.div(df.sum(axis=1), axis=0)
    df.reset_index(inplace=True)

    logger.info('Combined %d model predictions', len(df_parts))
    df.to_csv(models_dir / 'test_ensemble.csv', index=False)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--models', metavar='MODELS_DIR',
        help='Directory with any number of model outputs generated by train.py.')
    args = parser.parse_args()
    models_dir = Path(args.models).resolve()

    # Logging initialization
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s %(message)s', datefmt='%Y-%m-%d %H:%M:%S',
        handlers=[
            logging.FileHandler(models_dir / 'ensemble.log', mode='w'),
            logging.StreamHandler(),
        ])

    ensemble(models_dir)
